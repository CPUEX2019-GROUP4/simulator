// jr r31 はlabelstat に含めない

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <unordered_map>
#include <unordered_set>
#include <vector>
#include <iostream>
#include <string>
#include <sstream>
#include <fstream>
#include <cmath>

#include "stringutils.hh"
#include "fpu.hh"
#include "bit.hh"

//?definitions

//?globals@1

//?functions_for_retrieving_from_instructions

//?init_files

inline void label_stat(uint32_t pc)
{
  auto search = pc_labelcount.find(pc);
  if (search != pc_labelcount.end()) search->second++;
  else pc_labelcount.emplace(std::make_pair(pc, 1));
}

int main(int argc, char **argv)
{
  //?do_init

  puts("run only mode (label)!!");

  try {
    //?run_while
  }
  catch (const std::out_of_range& e) {  // memory range (most likely)
    //?on_error
  }
  catch (const std::runtime_error& e) {  // runtime error
    //?on_error
  }

  // XXX: label count (dirty unordered coding)
  std::ofstream f("labelstat", std::ios::out | std::ios::trunc);
  for (auto it : pc_labelcount) {
    auto search = rev_labels.find(it.first);
    if (search == rev_labels.end()) continue;
    std::string lab = search->second;
    f << lab << "\t" << it.second << std::endl;
  }
  f.flush();
  f.close();
  // end of label count (zako programmer)

  puts("\nsimulator terminated");
  std::cout <<"total executed instructions: " << FormatWithCommas(total_executed) << std::endl;
  //printf("max sp(r29): %ld, max hp(r30): %ld\n", r29_max, r30_max);

  // XXX: inst count
  if (inst_counter != 0) std::cout << "inst counter: \x1b[1m" << inst_counter << "\x1b[0m\n";
  // end of inst count

  free(inst_reg);
  ofs.flush();
  ofs.close();

  return 0;
}
